#!/bin/sh

### BEGIN INIT INFO
# Provides:          python_app
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: My Python App
# Description:       Keep a web.py service running, accepting HTTP connection
### END INIT INFO

# Change the next 3 lines to suit where you install your script and what you want to call it
DIR1=$PWD #"$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
DIR=$DIR1 # /newWebService
DAEMON=$DIR/run.py
DAEMON_NAME=python_app

# Add any command line options for your daemon here
DAEMON_OPTS=""

# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=fs2523

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid

#. init-functions

do_background () {
    echo "Starting system $DAEMON_NAME daemon"
    cd $DIR
    sudo nohup $DAEMON & > /dev/null
    echo $?
}
do_start () {
    echo "Starting system $DAEMON_NAME daemon"
	cd $DIR
	$DAEMON & 
    #start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --startas $DAEMON  -- $DAEMON_OPTS # --chdir $DIR 
    echo $?
}
do_stop () {
    echo "Stopping system $DAEMON_NAME daemon"
        sudo kill -9 $(ps aux | grep CitywideFootprinting/run.py | awk '{print $2}')
    	#killall python
	#start-stop-daemon --stop --pidfile $PIDFILE --retry 10
    echo $?
}

case "$1" in

    start|stop)
        do_${1}
        ;;

    restart|reload|force-reload)
        do_stop
        do_start
        ;;

    background)
        do_stop
        do_background
        ;;

    status)
        status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
        ;;

    *)
        echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
        exit 1
        ;;

esac
exit 0

